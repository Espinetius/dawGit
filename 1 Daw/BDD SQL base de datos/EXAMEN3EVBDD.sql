SET SERVEROUTPUT ON;
--------------------------------------------------------------------------------
--EJERCICIO 1
--------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE AUMENTOSTOCK(COD_PRODU NUMBER)
IS AUMENTO NUMBER; CODIGOPRODUCTO NUMBER:=0; CONTADOR NUMBER;
BEGIN
  SELECT COD_PRODUCTO INTO CODIGOPRODUCTO FROM PRODUCTOS WHERE COD_PRODUCTO=COD_PRODU;
  SELECT STOCK INTO AUMENTO FROM PRODUCTOS WHERE COD_PRODUCTO=CODIGOPRODUCTO;
  AUMENTO:=AUMENTO+AUMENTO*0.25;
  UPDATE PRODUCTOS SET STOCK=AUMENTO WHERE COD_PRODUCTO=CODIGOPRODUCTO;
  DBMS_OUTPUT.PUT_LINE('·CODIGO DE PRODUCTO: '||CODIGOPRODUCTO||'    STOCK: '||AUMENTO);  
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('NO HAY PRODUCTO CON ESE CODIGO');
END;

DECLARE
  COD_PRODU NUMBER;
BEGIN
  COD_PRODU:=&CODIGOPRODUCTO;
  DBMS_OUTPUT.PUT_LINE('EL CODIGO DE PRODUCTO INTRODUCIDO ES EL '||COD_PRODU);
  AUMENTOSTOCK(COD_PRODU);
END;

--------------------------------------------------------------------------------
--EJERCICIO 2
--------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE CAMBIOSTOCK(COD_PRODU_MAX NUMBER, COD_PRODU_MIN NUMBER)
IS  MAYOR NUMBER; MENOR NUMBER; STOCKMAYOR NUMBER; STOCKMENOR NUMBER; UNIDADESMAX NUMBER; UNIDADESMIN NUMBER;
    CODIGO NUMBER; DESCRIPCION VARCHAR2(50); LINEAPRECIOUNI NUMBER; STOCK NUMBER; CONTADOR NUMBER;
BEGIN
  SELECT COD_PRODUCTO INTO MAYOR FROM PRODUCTOS WHERE COD_PRODUCTO=COD_PRODU_MAX;
  SELECT COD_PRODUCTO INTO MENOR FROM PRODUCTOS WHERE COD_PRODUCTO=COD_PRODU_MIN;
  SELECT STOCK INTO STOCKMAYOR FROM PRODUCTOS WHERE COD_PRODUCTO=MAYOR;
  STOCKMAYOR:=STOCKMAYOR+15;
  SELECT STOCK INTO STOCKMENOR FROM PRODUCTOS WHERE COD_PRODUCTO=MENOR;
  STOCKMENOR:=STOCKMENOR-5;
  UPDATE PRODUCTOS SET STOCK=STOCKMAYOR WHERE COD_PRODUCTO=MAYOR;
  UPDATE PRODUCTOS SET STOCK=STOCKMENOR WHERE COD_PRODUCTO=MENOR;
  SELECT COUNT(*) INTO CONTADOR FROM PRODUCTOS;
  DBMS_OUTPUT.PUT_LINE('COD_PRODUCTO      LINEA_PRECIO_UNI        STOCK         DESCRIPCION');
  DBMS_OUTPUT.PUT_LINE('-------------     ----------------        ------        -------------------------');
  FOR I IN 1..CONTADOR LOOP
    SELECT * INTO CODIGO, DESCRIPCION, LINEAPRECIOUNI, STOCK FROM PRODUCTOS WHERE COD_PRODUCTO=I;
    DBMS_OUTPUT.PUT_LINE('      '||CODIGO||'           '||LINEAPRECIOUNI||'                     '||STOCK||'        '||DESCRIPCION);
  END LOOP;
  SELECT LINEA_PRECIO_UNI INTO UNIDADESMAX FROM PRODUCTOS WHERE COD_PRODUCTO=MAYOR;
  IF (UNIDADESMAX>30000) THEN
    DBMS_OUTPUT.PUT_LINE('EL PRODUCTO MAS VENDIDO TIENE MUCHAS UNIDADES');
  ELSIF (UNIDADESMAX<=30000) THEN
    DBMS_OUTPUT.PUT_LINE('EL PRODUCTO MAS VENDIDO TIENE POCAS UNIDADES');
  END IF;
  SELECT LINEA_PRECIO_UNI INTO UNIDADESMIN FROM PRODUCTOS WHERE COD_PRODUCTO=MENOR;
  IF (UNIDADESMIN>=5000) THEN
    DBMS_OUTPUT.PUT_LINE('EL PRODUCTO MENOS VENDIDO TIENE MUCHAS UNIDADES');
  ELSIF (UNIDADESMAX<5000) THEN
    DBMS_OUTPUT.PUT_LINE('EL PRODUCTO MENOS VENDIDO TIENE POCAS UNIDADES');
  END IF;
END;

DECLARE
  COD_PRODU_MAX NUMBER; COD_PRODU_MIN NUMBER; STOK NUMBER;
BEGIN
  SELECT MAX(SUM(UNIDADES)) INTO STOK FROM VENTAS GROUP BY COD_PRODUCTO;
  SELECT COD_PRODUCTO INTO COD_PRODU_MAX FROM VENTAS HAVING SUM(UNIDADES)=STOK GROUP BY COD_PRODUCTO;
  SELECT MIN(SUM(UNIDADES)) INTO STOK FROM VENTAS GROUP BY COD_PRODUCTO;
  SELECT COD_PRODUCTO INTO COD_PRODU_MIN FROM VENTAS HAVING SUM(UNIDADES)=STOK GROUP BY COD_PRODUCTO;
  CAMBIOSTOCK(COD_PRODU_MAX, COD_PRODU_MIN);
END;

--------------------------------------------------------------------------------
--EJERCICIO 3
--------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION SEREPITE(TEXTO VARCHAR2)
RETURN NUMBER
IS CONTADOR NUMBER:=0; LETRA VARCHAR2(25); LETRA2 VARCHAR2(25);
BEGIN
  IF (LENGTH(TEXTO)> 10) THEN
    FOR I IN 1..LENGTH(TEXTO) LOOP
      LETRA:=SUBSTR(TEXTO,I,1);
      FOR J IN 1..LENGTH(TEXTO) LOOP
        LETRA2:=SUBSTR(TEXTO,J,1);
        IF (LETRA=LETRA2 AND I<>J) THEN
          CONTADOR:=CONTADOR+1;
        END IF;
      END LOOP;
    END LOOP;
  ELSIF (LENGTH(TEXTO)<=10) THEN 
    DBMS_OUTPUT.PUT_LINE('EL TEXTO ES IGUAL O INFERIOR A 10 CARACTERES. TEXTO NO VALIDO.');
  END IF;
  RETURN(CONTADOR);
END SEREPITE;

DECLARE
  TEXTO VARCHAR2(50); NUM NUMBER;
BEGIN
  TEXTO:=&INTRODUCETEXTO;
  DBMS_OUTPUT.PUT_LINE('EL TEXTO INTRODUCIDO ES: '||TEXTO);
  NUM:=SEREPITE(TEXTO);
  DBMS_OUTPUT.PUT_LINE(NUM||' CARACTER REPETIDO');
END;  